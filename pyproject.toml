[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "dataspaces_entities"

[tool.flit.sdist]
exclude = [
    ".github",
    ".gitignore",
    ".coverage",
    ".env",
    ".markdownlint.yaml",
    ".pre-commit-config.yaml",
    "asgi.py",
    "docker/",
    "logs/",
    "tests/",
]

[project]
name = "DataSpaces-Entities"
authors = [
    {name = "Casper Welzel Andersen", email = "casper.w.andersen@sintef.no"},
]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Natural Language :: English",
    "Operating System :: OS Independent",
]
requires-python = "~=3.10"
dynamic = ["version", "description"]

dependencies = [
    "DataSpaces-Auth[fastapi] ~=0.3.1",  # From SINTEF's GitLab (SemanticMatter group)
    "fastapi >=0.115.5,<1",
    "httpx ~=0.28.1",
    "pydantic-settings ~=2.9",
    "pymongo ~=4.13",
    "python-dotenv ~=1.1",
    "pyyaml ~=6.0",
    "soft7 >=0.3.0,<1",
    "uvicorn-worker >=0.3.0,<1",
]

[project.optional-dependencies]
testing = [
    "dlite-python ~=0.5.29",
    "pytest ~=8.4",
    "pytest-cov ~=6.2",
    "pytest-httpx ~=0.35.0",
]
server = [
    "gunicorn ~=23.0",
]
dev = [
    "pre-commit ~=4.2",
    "DataSpaces-Entities[testing]",
]

[project.urls]
Home = "https://github.com/M-ERA-NET-MEDIATE/ds-entities-service"
Documentation = "https://M-ERA-NET-MEDIATE.github.io/ds-entities-service"
Source = "https://github.com/M-ERA-NET-MEDIATE/ds-entities-service"
"Issue Tracker" = "https://github.com/M-ERA-NET-MEDIATE/ds-entities-service/issues"
Changelog = "https://M-ERA-NET-MEDIATE.github.io/ds-entities-service/latest/CHANGELOG"

[tool.black]
line-length = 108

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
scripts_are_modules = true
warn_unused_configs = true
hide_error_codes = false
allow_redefinition = true
check_untyped_defs = true
plugins = ["pydantic.mypy"]

[tool.ruff]
line-length = 108

[tool.ruff.lint]
extend-select = [
  "E",  # pycodestyle
  "F",  # pyflakes
  "B",  # flake8-bugbear
  "BLE",  # flake8-blind-except
  "I",  # isort
  "ARG",  # flake8-unused-arguments
  "C4",  # flake8-comprehensions
  "ICN",  # flake8-import-conventions
  "G",  # flake8-logging-format
  "PGH",  # pygrep-hooks
  "PIE",  # flake8-pie
  "PL",  # pylint
  "PT",  # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "RET",  # flake8-return
  "RUF",  # Ruff-specific
  "SIM",  # flake8-simplify
  "T20",  # flake8-print
  "YTT",  # flake8-2020
  "EXE",  # flake8-executable
  "PYI",  # flake8-pyi
]
ignore = [
  "PLR",  # Design related pylint codes
  "B008",  # Performing function calls in argument defaults - done all the time in the CLI.
]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "BLE",  # flake8-blind-except
    "T20",  # flake8-print
]
".github/**" = [
    "BLE",  # flake8-blind-except
    "T20",  # flake8-print
]

[tool.pytest.ini_options]
minversion = "8.3"
addopts = "-rs --cov=dataspaces_entities --cov-config=pyproject.toml --cov-report=term-missing:skip-covered --no-cov-on-fail"
filterwarnings = [
    # Treat all warnings as errors
    "error",

    # Notice to close MongoClient
    "ignore:.*Unclosed MongoClient opened at.*:ResourceWarning",

    # DataSpaces-Auth issues a warning if realm-export.json cannot be found
    # Keep this only for as long as SemanticMatter/ds-auth#32 is not fixed.
    # Link: https://github.com/SemanticMatter/ds-auth/issues/32
    "ignore:.*The realm-export\\.json file was not found.*:UserWarning",

    # Avoid SegmentationFault from DLite
    "ignore::DeprecationWarning:dlite",
]

[tool.coverage.run]
sigterm = true
relative_files = true
source = ["dataspaces_entities"]
